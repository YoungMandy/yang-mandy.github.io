import{_ as e,c as o,e as t,h as s,k as r,f as c}from"./index-52b8ed54.js";const n="/assets/eventLoop-03959c1b.png",i={},a=r('<h1 class="page-title">事件循环</h1><p class="page-description"> 浏览器上会发生很多事件,如IO输入、按钮点击、屏幕缩放等等,浏览器需要有个调度机制让这些事件有条不紊地顺序执行,这个调度机制就是事件循环。 </p><h2>消息队列</h2><p>一个个任务放到消息队列里面依次执行,在<strong>消息队列</strong>里面的任务称为<strong>宏任务</strong>,为了让优先级更高的新任务更快的执行,浏览器又为每个宏任务建立了一个<strong>微任务队列</strong>,当前宏任务执行完毕后,先看当前宏任务的微任务队列里面是否有微任务要执行,有的话先把微任务执行完毕,再执行下一个宏任务</p><img src="'+n+'" width="800" style="object-fit:contain;"><h2>微任务</h2><ol>浏览器提供了五种Observer来监听页面变化 <li><code>MutationObserver</code></li><li><code>IntersectionObserver</code></li><li><code>PerformanceObserver</code></li><li><code>ResizeObserver</code></li><li><code>ReportingObderver</code></li></ol>',7),l=c("a",{link:"https://zhuanlan.zhihu.com/p/482144072"},"浏览器的五种观察者模式",-1);function d(p,h){return o(),t("section",null,[a,s(" Observer属于微任务,且优先级小于Promise,参考来源"),l])}const g=e(i,[["render",d]]);export{g as default};
